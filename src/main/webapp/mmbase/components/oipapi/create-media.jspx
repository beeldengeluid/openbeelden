<mm:content
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0"
          >
  <jsp:output omit-xml-declaration="true" />
    
    <!-- POST : creates media nodes with url -->

    <mm:escaper type="tagstripper" id="striptags">
      <mm:param name="tags">none</mm:param>
    </mm:escaper>
  
    <mm:import externid="apikey" required="true" />
    <mm:import externid="url" required="true" />
    <mm:import externid="type" required="true" />
    
    <!-- requires besides the above: 
    license
    cc-by-sa     Creative Commons - Naamsvermelding-Gelijk delen
    cc-by         Creative Commons - Naamsvermelding
    cc-by-nc     Creative Commons – Naamsvermelding-Niet-commercieel
    cc-by-nc-sa Creative Commons – Naamsvermelding-Niet-commercieel-Gelijk delen
    cc-by-nd     Creative Commons – Naamsvermelding-Geen Afgeleide werken
    cc-by-nc-nd Creative Commons – Naamsvermelding-Niet-commercieel-Geen Afgeleide werken
    cc0              Publiek Domein    
    -->
    <mm:import externid="license">cc-by-sa</mm:import>
    <mm:log level="info">lic: ${license} </mm:log>

    <c:choose>
      <c:when test="${empty apikey}">
        <div>Error: no apikey.</div>
      </c:when>
      <c:when test="${empty url}">
        <div>Error: no url.</div>
      </c:when>
      <c:otherwise>
        <!-- write apikey to request from where it's picked up by eu.openimages.Autenthication -->
        <mm:write referid="apikey" request="apikey" />

        <c:catch var="exc"> 
          <!-- try and login with apikey, catch exception -->
          <mm:cloud method="delegate" authenticate="apikey">

            <mm:maycreate type="$type" inverse="true">
              <dl class="error">
                <dt>Not allowed</dt>
                <dd>You are not allowed to create this type of node.</dd>
              </dl>
            </mm:maycreate>

            <mm:maycreate type="$type">
              <mm:form mode="validate">
                <mm:import id="buffer">
                  <c:set var="fieldlist" value="" />
                  <c:set var="errorlist" value="" />
                  <mm:createnode type="$type" commitonclose="false" id="new_node">
                    <mm:fieldlist type="edit" varStatus="field">

                      <c:if test="${field.current.state eq 2}"><!-- state persistent 
                        public int getState()
                        Returns this field's state identifier (virtual, persistent, system, systemvirtual).
                        http://www.mmbase.org/development/api/1.9/constant-values.html#org.mmbase.bridge.Field.STATE_VIRTUAL
                      -->
                        <mm:fieldinfo type="name" id="name" write="false" />
                        <c:if test="${name ne 'title' 
                                  and name ne 'intro'}">
                          <c:set var="fieldlist">${name}${empty fieldlist ? '' : ','}${fieldlist}</c:set>
                        </c:if>
                      </c:if>
                      
                    </mm:fieldlist>
                    <mm:fieldlist fields="title,intro">
                      <mm:fieldinfo type="name" id="name2" write="false" />
                      <mm:import externid="$name2" />
                      <mm:setfield name="$name2" valueid="$name2" />
                      <!-- <mm:fieldinfo type="check" /> -->
                      <c:set var="errorlist"> <mm:fieldinfo type="errors" escape="striptags" />${empty errorlist ? '' : ','} ${errorlist}</c:set>
                    </mm:fieldlist>

                    <mm:fieldlist fields="${fieldlist}">
                      <mm:fieldinfo type="name" id="name3" write="false" />
                      <mm:import externid="$name3" />
                      <mm:write referid="$name3">
                        <mm:isnotempty>
                          <mm:setfield name="$name3" valueid="$name3" />
                        </mm:isnotempty>
                      </mm:write>
                    </mm:fieldlist>

                  </mm:createnode>
                
                  <c:set var="saved" value="no" />
                  <mm:valid>
                    <mm:listnodescontainer type="licenses">
                      <mm:constraint field="licensekey" value="$license" operator="EQUAL" />
                      <mm:maxnumber value="1" />
                      <mm:listnodes>
                        <mm:node number="$_node" id="licensenode" />
                      </mm:listnodes>
                    </mm:listnodescontainer>
                    <mm:notpresent referid="licensenode">
                      <mm:node number="licenses_attributionsharealike" id="licensenode" />
                    </mm:notpresent>
                    <mm:createrelation source="new_node" destination="licensenode" role="related" />
                    
                    <mm:commit />
                    <c:set var="saved" value="yes" />
                    
                    <dl>
                      <dt>number</dt>
                      <dd>${new_node}</dd>
                    </dl>

                  </mm:valid>
                  <mm:valid inverse="true">
                    <!-- jsp:scriptlet>response.setStatus(400); </jsp:scriptlet -->
                    <dl>
                      <dt>400 - Bad request</dt>
                      <dd>form is invalid (type: ${type})
                      ${errorlist}
                      </dd>
                    </dl>
                  </mm:valid>
                
                </mm:import>
              </mm:form>

              <c:if test="${saved eq 'yes'}">
                <!-- media meta data saved : download (with) function -->
                <mm:node number="$new_node">
                  <mm:functioncontainer>
                    <mm:param name="url">${url}</mm:param>
                    <mm:function name="downloadmedia" />
                  </mm:functioncontainer> 
                </mm:node>
              </c:if>
  
            </mm:maycreate>
          </mm:cloud>
        </c:catch>

        <c:choose>
          <c:when test="${!empty exc}"> <!-- apperently an exception, show message if possible -->
            <!-- jsp:scriptlet>response.setStatus(500); </jsp:scriptlet -->
            <content>Error 500 - Unknown apikey? ${exc}</content>
          </c:when>
          <c:when test="${!empty buffer}">
            <content class="buffer">'${buffer}'</content>
          </c:when>
          <c:otherwise>
            <!-- jsp:scriptlet>response.setStatus(401); </jsp:scriptlet -->
            <content>401 Unauthorized - Failed to login ${exc}</content>
          </c:otherwise>
        </c:choose><!-- end checking for errors -->

      </c:otherwise>
    </c:choose>


</mm:content>
