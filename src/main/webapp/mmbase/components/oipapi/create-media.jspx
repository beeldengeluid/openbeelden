<mm:content
          xmlns:jsp="http://java.sun.com/JSP/Page"
          xmlns:c="http://java.sun.com/jsp/jstl/core"
          xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0"
          >
  <jsp:output omit-xml-declaration="true" />
    
    <!-- POST : creates media nodes with url -->
  
    <mm:import externid="apikey" required="true" />
    <mm:import externid="url" required="true" />
    <mm:import externid="type" required="true" />
    
    <!-- requires besides the above: 
    license
    cc-by-sa     Creative Commons - Naamsvermelding-Gelijk delen
    cc-by         Creative Commons - Naamsvermelding
    cc-by-nc     Creative Commons – Naamsvermelding-Niet-commercieel
    cc-by-nc-sa Creative Commons – Naamsvermelding-Niet-commercieel-Gelijk delen
    cc-by-nd     Creative Commons – Naamsvermelding-Geen Afgeleide werken
    cc-by-nc-nd Creative Commons – Naamsvermelding-Niet-commercieel-Geen Afgeleide werken
    cc0              Publiek Domein    
    -->
    <mm:import externid="license">cc-by-sa</mm:import>
    <mm:listnodescontainer type="licenses">
      <mm:constraint field="licensekey" value="$license" operator="EQUAL" />
      <mm:maxnumber value="1" />
      <mm:listnodes>
        <mm:node number="$_node.number" id="licensenode" />
      </mm:listnodes>
    </mm:listnodescontainer>

    <c:choose>
      <c:when test="${empty apikey}">
        <div>Error: no apikey.</div>
      </c:when>
      <c:otherwise>
        <!-- write apikey to request from where it's picked up by eu.openimages.Autenthication -->
        <mm:write referid="apikey" request="apikey" />

        <c:catch var="exc"> <!-- try and login with apikey, catch exception -->
          <mm:cloud method="delegate" authenticate="apikey">

            <mm:maycreate type="$type">
              <mm:form mode="validate">
                
                <mm:import id="buffer">
                  <mm:createnode type="$type" commitonclose="false" id="new_node">
                    <mm:fieldlist type="edit" varStatus="field">
                      <mm:fieldinfo type="name" id="name" write="false" />
                      <mm:import externid="$name" />

                      <c:if test="${field.current.state eq 2}"><!-- should be text -->
                        <mm:setfield name="$name"><mm:write referid="$name" /></mm:setfield>
                        <mm:fieldinfo type="check" />
                      </c:if>
                    </mm:fieldlist>
                  </mm:createnode>
                
                  <mm:valid>
                    <!-- mm:commit / -->
                    <dl>
                      <dt>number</dt>
                      <dd>${new_node}</dd>
                    </dl>
                  </mm:valid>
                  <mm:valid inverse="true">
                    <!-- jsp:scriptlet>response.setStatus(400); </jsp:scriptlet -->
                    <dd>
                      <dt>400 - Bad request</dt>
                      <dt>form is invalid (type: ${type})</dt>
                    </dd>
                  </mm:valid>
                
                </mm:import>
              </mm:form>
            </mm:maycreate>
            
            <mm:maycreate type="$type" inverse="true">
              <dl class="error">
                <dt>Not allowed</dt>
                <dd>You are not allowed to create this type of node.</dd>
              </dl>
            </mm:maycreate>
            
          </mm:cloud>
        </c:catch>

        <c:choose>
          <c:when test="${!empty exc}"> <!-- apperently an exception, show message if possible -->
            <!-- jsp:scriptlet>response.setStatus(500); </jsp:scriptlet -->
            <content>Error 500 - Unknown apikey? ${exc}</content>
          </c:when>
          <c:when test="${!empty buffer}">
            <content class="buffer">'${buffer}'</content>
          </c:when>
          <c:otherwise>
            <!-- jsp:scriptlet>response.setStatus(401); </jsp:scriptlet -->
            <content>401 Unauthorized - Failed to login ${exc}</content>
          </c:otherwise>
        </c:choose><!-- end checking for errors -->

      </c:otherwise>
    </c:choose>


</mm:content>
