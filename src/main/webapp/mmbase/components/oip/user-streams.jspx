<div
    class="mm_c c_oip b_user-streams ${requestScope.componentClassName}"
    id="${requestScope.componentId}"
    xmlns:c="http://java.sun.com/jsp/jstl/core"
    xmlns:fmt="http://java.sun.com/jsp/jstl/fmt"
    xmlns:fn="http://java.sun.com/jsp/jstl/functions"
    xmlns:jsp="http://java.sun.com/JSP/Page"
    xmlns:oip="urn:jsptagdir:/WEB-INF/tags/oip"
    xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0">
  <jsp:output omit-xml-declaration="true" />

  <mm:import externid="n" required="true" />
  <mm:import externid="media" />
  <mm:import externid="trigger" />
  <mm:import externid="interrupt" /> <!--  vartype="integer" ?-->
  <mm:import externid="all">false</mm:import> 
  <mm:import externid="stream" />

  <mm:node number="user.admin"><mm:field name="number" id="admin_nodenr" write="false" /></mm:node>

  <oip:h2 block="user-streams" />
  
  <table summary="my streams" border="0">
    <caption>${mm:string(requestScope['org.mmbase.framework.state'].renderer.block.description)}</caption>
    <tbody>
    <mm:listnodescontainer type="mediafragments">
      <mm:hasrank maxvalue="basic user">
        <mm:constraint field="owner" value="${requestScope['org.mmbase.cloud'].user.ownerField}" />
      </mm:hasrank>
      <mm:present referid="media">
        <mm:constraint field="number" value="$media" operator="EQUAL" />
      </mm:present>
      <mm:maxnumber value="99" />
      <mm:listnodes id="mediafragment">
        <mm:link referids="_node@media">
          <mm:frameworkparam name="component">oip</mm:frameworkparam>
          <mm:frameworkparam name="block">user-media</mm:frameworkparam>
          <mm:frameworkparam name="media">${_node}</mm:frameworkparam>
          <tr class="title">
            <th><jsp:text> </jsp:text></th>
            <th><a href="${_}"><mm:field name="title" /></a></th>
          </tr>
        </mm:link>
        <mm:listfunction name="filteredurls">
          <c:if test="${_.state eq 'SOURCE' or _.state eq 'SOURCE_UNSUPPORTED'}">
            <mm:node number="${_.source.number}">
              <mm:import id="source" reset="true"><mm:field name="number" /></mm:import>
              <tr>
                <th>${fn:toLowerCase(_.state)}</th>
                <td>
                  <mm:import id="mimetype" reset="true"><mm:field name="mimetype" /></mm:import>
                  <a title="${mimetype} ${_.dimension}" href="${mm:escape('text/xml', _.URL)}" onClick="javascript: _gaq.push(['_trackPageview', '/downloads>
                    <oip:filesubstr filename="${_.filename}" length="36" />
                  </a>
                  (${mimetype}<c:if test="${!empty _.dimension}">, ${_.dimension}</c:if>)
                </td>
              </tr>
            </mm:node>
            <mm:hasrank minvalue="project manager">
              <mm:nodeinfo type="type" id="nodetype" write="false" />
              <c:if test="${nodetype ne 'imagefragments'}">
                <tr>
                  <th>transcode</th>
                  <td class="action">
                    
                    <mm:listfunction set="streams" name="runningJobs" id="job">
                      <c:if test="${_.node.number eq source}">
                        <c:set var="hasjobrunning" value="true" />
                      </c:if>
                    </mm:listfunction>
                    
                    <mm:node number="${source}">
                      
                      <c:choose>
                        <c:when test="${stream eq source and trigger eq mediafragment}">
                          <mm:voidfunction name="triggerCaches" referids="all" />
                          <c:set var="triggered" value="true" />
                          <p class="msg stay">Transcoding triggered (all:${all})</p>
                        </c:when>
                        <c:otherwise>
                          <c:if test="${!hasjobrunning}">
                            <mm:node number="$n">
                              <mm:link>
                                <mm:param name="media">${mediafragment}</mm:param>
                                <mm:param name="trigger">${mediafragment}</mm:param>
                                <mm:param name="stream">${source}</mm:param>
                                <mm:param name="all">true</mm:param>
                                <a href="${_}">all</a>
                              </mm:link> 
                              |
                              <mm:link><!-- BUG? seems like a bug you have to get node parameter n this way -->
                                <mm:param name="media">${mediafragment}</mm:param>
                                <mm:param name="trigger">${mediafragment}</mm:param>
                                <mm:param name="stream">${source}</mm:param>
                                <a href="${_}">only new</a>
                              </mm:link>
                            </mm:node>
                          </c:if>
                        </c:otherwise>
                      </c:choose>
                        
                      <!-- interrupt -->
                      <c:choose>
                        <c:when test="${interrupt eq mediafragment}">
                          <mm:function set="streams" name="cancelJob" referids="_node@node" />
                        </c:when>
                        <c:otherwise>
                          <c:if test="${triggered or hasjobrunning}">
                            <mm:node number="$n">
                              <mm:link><!-- BUG? seems like a bug you have to get node parameter n this way -->
                                <mm:param name="media">${mediafragment}</mm:param>
                                <mm:param name="interrupt">${mediafragment}</mm:param>
                                <a href="${_}">interrupt</a>
                              </mm:link>
                            </mm:node>
                          </c:if>
                        </c:otherwise>
                      </c:choose>
                      
                    </mm:node>
                  </td>
                </tr>
              </c:if>
            </mm:hasrank>
          </c:if>
        </mm:listfunction>

        <mm:listfunction name="filteredurls">
          <c:if test="${_.state ne 'SOURCE' and _.state ne 'SOURCE_UNSUPPORTED'}">
            <c:set var="recachevalue" value="${mediafragment}:${_.source.number}" />
            <c:set var="thecache" value="${_.source.number}" /> <!-- stream number -->
            <tr>
              <th>
                ${fn:toLowerCase(_.state)}
              </th>
              <td>
                
                <mm:import id="more_info" reset="true">${_.mimeType}<jsp:text> </jsp:text><mm:node number="${_.source.number}" notfound="skip"><mm:hasfield name="key"><mm:field name="key" /></mm:hasfield></mm:node></mm:import>
                <c:choose>
                  <c:when test="${_.available}">
                    <a title="${more_info}" href="${mm:escape('text/xml', _.URL)}">
                      <oip:filesubstr filename="${_.filename}" length="36" />
                    </a>
                    (${_.mimeType}<c:if test="${!empty _.dimension}">, ${_.dimension}</c:if>)
                  </c:when>
                  <c:otherwise>
                    <span title="${more_info}"><oip:filesubstr filename="${_.filename}" length="36" /></span>
                    (${_.mimeType})
                  </c:otherwise>
                </c:choose>
                
                <!-- re-transcoding -->
                <mm:hasrank minvalue="project manager">
                  <c:choose>
                    <c:when test="${stream eq recachevalue}">
                      <mm:node number="${source}">
                        <mm:booleanfunction name="triggerCaches" referids="thecache@cache">
                          <c:set var="triggered" value="true" />
                          <p class="msg stay">Transcoding triggered</p>
                        </mm:booleanfunction>
                      </mm:node>
                    </c:when>
                    <c:otherwise>
                      <c:choose>
                        <c:when test="${_.state != 'BUSY'}">
                          <c:if test="${!hasjobrunning and empty triggered}">
                            <mm:link referids="mediafragment@media,source@trigger,recachevalue@stream">
                              <a href="${_}">trigger</a>
                            </mm:link>
                          </c:if>
                        </c:when>
                        <c:otherwise>
                          <p class="msg stay">Transcoding</p>
                        </c:otherwise>
                      </c:choose>
                    </c:otherwise>
                  </c:choose>
                </mm:hasrank>
                
              </td>
            </tr>
          </c:if>
        </mm:listfunction>
      </mm:listnodes>
    </mm:listnodescontainer>
    </tbody>
  </table>

  <mm:present referid="media">
    <c:if test="${!empty trigger or !empty interrupt}">
      <mm:link referids="media">
        <mm:frameworkparam name="component">oip</mm:frameworkparam>
        <mm:frameworkparam name="block">user-media</mm:frameworkparam>
        <p><a href="${_}">Â« <fmt:message key="users.back" /></a></p>
      </mm:link>
    </c:if>
  </mm:present>

</div>
