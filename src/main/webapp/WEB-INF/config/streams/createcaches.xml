<createcaches
    xmlns="http://www.mmbase.org/xmlns/createcaches"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.mmbase.org/xmlns/createcaches http://www.mmbase.org/xmlns/createcaches.xsd"
    >
  <!-- minimal config, works on most hosts -->
  <localhost max_simultaneous_transcoders="1" stage="recognizer"  />
  <localhost max_simultaneous_transcoders="1" stage="transcoder" />

  <!-- external server running mmbase commandserver which transfers calls to ffmpeg, ffmpeg2theora etc.
       a way to configure an dedicated audio and video transcoding server.  -->
  <!-- <server max_simultaneous_transcoders="2" host="localhost" port="1679" />
  <server max_simultaneous_transcoders="2" host="192.168.1.13" port="1679" /> -->

  <!-- for testing only, creates and "infite" running transcoder to test cancels, interrupts etc. -->
  <!-- <transcoder>
    <class name="org.mmbase.streams.transcoders.InfiniteTranscoder">
    </class>
  </transcoder>  -->

  <!-- recognizer: uses ffmpeg -i to recognize uploaded video, audio or image -->
  <recognizer label="source"
              id="recognizer" >
    <class name="org.mmbase.streams.transcoders.FFMpegRecognizer">
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer">
      <param name="updateSource">true</param>
    </loganalyzer>
  </recognizer>

  <!-- mp4 low -->
  <transcoder label="sd"
      mimetype="video/*" in="recognizer" id="v4">
    <class name="org.mmbase.streams.transcoders.FFMpegTranscoder">
      <param name="format">mp4</param>
      <param name="-c:v">libx264</param>
      <param name="framesPerSecond">25</param>
      <param name="-b:v">1024k</param>
      <param name="-c:a">aac</param>
      <param name="-b:a">128k</param>
      <param name="audioChannels">2</param>
      <param name="async">1</param>
      <param name="-vf">scale=-1:288</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer" />
  </transcoder>

  <!-- ogv low -->
  <transcoder label="sd"
      mimetype="video/*" in="recognizer" id="v2">
    <class name="org.mmbase.streams.transcoders.FFMpeg2TheoraTranscoder">
      <param name="videoQuality">5</param>
      <param name="height">288</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpeg2TheoraAnalyzer" />
  </transcoder>

  <!-- m3u8: create segments with ffmpeg, uses mp4 low (id v4) for input -->
  <transcoder
      label="playlist-sd"
      mimetype="video/*" in="v4" id="v10">
    <class name="org.mmbase.streams.transcoders.FFMpegSegmenterTranscoder">
      <param name="-c:v">libx264</param>
      <param name="-b:v">128k</param>
      <param name="format">m3u8</param>
      <param name="-flags">-global_header</param>
      <param name="-map">0</param>
      <!-- segment part: 
        -segment_list is filled by streams application,  
        -segment_list_entry_prefix is httpPrefix + path made by streams application -->
      <param name="-f">ssegment</param>
      <param name="-segment_time">10</param>
      <param name="-segment_format">mpegts</param>
      <param name="httpPrefix">http://localhost:8080/files/</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer" />
  </transcoder>

  <!-- webm low:
       config for webm/vp8, can maybe done better with vpre:
       ffmpeg -i video.mpg -vpre libvpx_vp8-360p -b 1700k -pass 2 
       -acodec libvorbis -ab 128k -ar 44100 -threads 0 video.webm -->
  <transcoder label="sd" 
      mimetype="video/*" in="recognizer" id="v8">
    <class name="org.mmbase.streams.transcoders.FFMpegTranscoder">
      <param name="format">webm</param>
      <param name="-c:v">libvpx</param>
      <param name="-b:v">1024k</param>
      <param name="-c:a">libvorbis</param>
      <param name="-b:a">128k</param>
      <param name="-ar">44100</param>
      <param name="-threads">0</param>
      <param name="audioChannels">2</param>
      <param name="async">1</param>
      <param name="-vf">scale=-1:288</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer" />
  </transcoder>
    
  <!-- audio ogg: ffmpeg -i audio.wav -acodec libvorbis -aq 32 -ab 192k audio.ogg -->
  <transcoder label="sd"
      mimetype="audio/*" id="a1" in="recognizer">
    <class name="org.mmbase.streams.transcoders.FFMpegTranscoder">
      <param name="format">ogg</param>
      <param name="acodec">libvorbis</param>
      <param name="aq">32</param> <!-- 0-255 (0 = highest quality, 255 = lowest) -->
      <param name="ab">192k</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer" />
  </transcoder>

  <!-- audio mp3: ffmpeg -i audio.wav -acodec libmp3lame -aq 32 -ab 192k audio.mp3 -->
  <transcoder label="sd"
      mimetype="audio/*" id="a2" in="recognizer">
    <class name="org.mmbase.streams.transcoders.FFMpegTranscoder">
      <param name="format">mp3</param>
      <param name="acodec">libmp3lame</param>
      <param name="aq">32</param>
      <param name="ab">192k</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer" />
  </transcoder>

  <!-- audio flac: ffmpeg -i Goo.mp3 -f flac -aq 60 -ab 192k goo.flac -->
  <transcoder label="sd"
      mimetype="audio/*" id="a3" in="recognizer">
    <class name="org.mmbase.streams.transcoders.FFMpegTranscoder">
      <param name="format">flac</param>
      <param name="aq">60</param>
      <param name="ab">192k</param>
    </class>
    <loganalyzer name="org.mmbase.streams.transcoders.FFMpegAnalyzer" />
  </transcoder>

</createcaches>
