<record
     xmlns:jsp="http://java.sun.com/JSP/Page"
     xmlns:c="http://java.sun.com/jsp/jstl/core"
     xmlns:fn="http://java.sun.com/jsp/jstl/functions"
     xmlns:fmt="http://java.sun.com/jsp/jstl/fmt"
     xmlns:mm="http://www.mmbase.org/mmbase-taglib-2.0"
     xmlns:oip="urn:jsptagdir:/WEB-INF/tags/oip">
  <jsp:output omit-xml-declaration="true" />
  <!-- version: '$Id$' -->

  <mm:import externid="set" />
  
  <mm:escaper type="tagstripper" id="tagstripper" /><!-- to strip html -->
  <mm:nodeinfo type="type" id="type" write="false" />
  
  <jsp:include page="/feeds/inc/oai.record.header.jspx">
    <jsp:param name="set" value="${set}" />
  </jsp:include>

  <metadata>
    <oai_oi:oi
        xmlns:oi="http://www.openbeelden.nl/oai/"
        xmlns:oai_oi="http://www.openbeelden.nl/feeds/oai/"
        xmlns:dc="http://purl.org/dc/elements/1.1/"
        xmlns:dcterms="http://purl.org/dc/terms"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.openbeelden.nl/feeds/oai/ http://www.openbeelden.nl/feeds/oai/oai_oi.xsd">

      <oi:title xml:lang="${_node.language}"><mm:field name="title" /></oi:title>
      <mm:relatednodescontainer type="mediafragments_translations" role="langrel" searchdirs="destination">
        <mm:relatednodes>
          <oi:title xml:lang="${_node.language}"><mm:field name="title" /></oi:title>
        </mm:relatednodes>
      </mm:relatednodescontainer>

      <oi:alternative xml:lang="${_node.language}"><mm:field name="subtitle" /></oi:alternative>
      <mm:relatednodescontainer type="mediafragments_translations" role="langrel" searchdirs="destination">
        <mm:relatednodes>
          <oi:alternative xml:lang="${_node.language}"><mm:field name="subtitle" /></oi:alternative>
        </mm:relatednodes>
      </mm:relatednodescontainer>

      <oi:creator xml:lang="${_node.language}"><mm:field name="dc_creator" id="dc_creator" /></oi:creator>
      <mm:relatednodescontainer type="mediafragments_translations" role="langrel" searchdirs="destination">
        <mm:relatednodes>
          <mm:field name="dc_creator">
            <mm:isnotempty>
              <oi:creator xml:lang="${_node.language}"><mm:write /></oi:creator>
            </mm:isnotempty>
          </mm:field>
        </mm:relatednodes>
      </mm:relatednodescontainer>

      <!-- oi:subject -->
      <mm:field name="keywords" escape="none">
        <mm:isnotempty>
          <c:forEach items="${fn:split(_, ';')}" var="subject">
            <oi:subject xml:lang="${_node.language}"><c:out value="${fn:trim(subject)}" /></oi:subject>
          </c:forEach>
        </mm:isnotempty>
      </mm:field>
      <mm:relatednodescontainer type="mediafragments_translations" role="langrel" searchdirs="destination">
        <mm:relatednodes>
          <mm:field name="keywords" escape="none">
            <mm:isnotempty>
              <c:forEach items="${fn:split(_, ';')}" var="subject">
                <oi:subject xml:lang="${_node.language}"><c:out value="${fn:trim(subject)}" /></oi:subject>
              </c:forEach>
            </mm:isnotempty>
          </mm:field>
        </mm:relatednodes>
      </mm:relatednodescontainer>

      <oi:description xml:lang="${_node.language}">
        <mm:field name="intro" escape="tagstripper,text/xml" />
      </oi:description>
      <mm:relatednodescontainer type="mediafragments_translations" role="langrel" searchdirs="destination">
        <mm:relatednodes>
          <oi:description xml:lang="${_node.language}">
            <mm:field name="intro" escape="tagstripper" />
          </oi:description>
        </mm:relatednodes>
      </mm:relatednodescontainer>

      <oi:abstract xml:lang="${_node.language}">
        <mm:field name="body" escape="tagstripper,text/xml" />
      </oi:abstract>
      <mm:relatednodescontainer type="mediafragments_translations" role="langrel" searchdirs="destination">
        <mm:relatednodes>
          <oi:abstract xml:lang="${_node.language}">
            <mm:field name="body" escape="tagstripper,text/xml" />
          </oi:abstract>
        </mm:relatednodes>
      </mm:relatednodescontainer>

      <!-- oi:publisher -->
      <mm:field name="publisher">
        <mm:isnotempty><oi:publisher xml:lang="${_node.language}"><mm:write /></oi:publisher></mm:isnotempty>
      </mm:field>
      <oi:publisher>
        <mm:field name="owner" write="false">
          <mm:hasnode number="$_" inverse="true">unknown</mm:hasnode>
          <mm:hasnode number="$_">
            <mm:node number="$_">
              <mm:link>
                <mm:frameworkparam name="component">oip</mm:frameworkparam>
                <mm:frameworkparam name="block">user</mm:frameworkparam>
                <mm:frameworkparam name="user">${_node}</mm:frameworkparam>
                <mm:url page="${_}" absolute="true" />
              </mm:link>
            </mm:node>
          </mm:hasnode>
        </mm:field>
      </oi:publisher>

      <!-- oi:contributor -->
      <mm:field name="contributor" escape="none">
        <mm:isnotempty>
          <c:forEach items="${fn:split(_, ';')}" var="key">
            <oi:contributor><c:out value="${fn:trim(key)}" /></oi:contributor>
          </c:forEach>
        </mm:isnotempty>
      </mm:field>

      <oi:date><mm:field name="date"><mm:time format="yyyy-MM-dd" /></mm:field></oi:date>

      <oi:type>
        <c:choose>
          <c:when test="${fn:startsWith(type,'image')}">Still Image</c:when>
          <c:when test="${fn:startsWith(type,'audio')}">Sound Recording</c:when>
          <c:otherwise>Moving Image</c:otherwise>
        </c:choose>
      </oi:type>

      <!-- P[n]Y[n]M[n]DT[n]H[n]M[n]S or P[n]W f.e. P3Y6M4DT12H30M5S -->
      <mm:locale language="en">
        <mm:field name="length">
          <c:choose>
            <c:when test="${_ ge 3600000}">
              <oi:extent>PT<mm:time inputformat="S" format="h'H'm'M's'S'" /></oi:extent>
            </c:when>
            <c:when test="${_ lt 3600000 and _ ge 60000}">
              <oi:extent>PT<mm:time inputformat="S" format="m'M's'S'" /></oi:extent>
            </c:when>
            <c:when test="${_ lt 60000 and _ gt 0}">
              <oi:extent>PT<mm:time inputformat="S" format="s'S'" /></oi:extent>
            </c:when>
            <c:otherwise>
              <oi:extent>PT0S</oi:extent>
            </c:otherwise>
          </c:choose>
        </mm:field>
      </mm:locale>

      <!-- oi:medium -->
      <mm:functioncontainer>
        <mm:param name="format">WEBM,OGV,MP4,OGG,TS,M3U8,MP3,OGG,OGA,PNG,JPG,JPEG,MPG,MPEG</mm:param>
        <mm:listfunction name="filteredurls">
          <c:if test="${!empty _.URL and _.available}">
            <mm:node number="${_.source.number}">
              <c:choose>
                <c:when test="${fn:startsWith(type,'image')}">
                  <oi:medium format="${_.state eq 'SOURCE' ? 'source' : 'image'}"><mm:url page="${_.URL}" absolute="true" /></oi:medium>
                </c:when>
                <c:when test="${!empty _node.label}">
                  <oi:medium format="${_node.label}"><mm:url page="${_.URL}" absolute="true" /></oi:medium>
                </c:when>
                <c:otherwise>
                  <oi:medium format="unknown"><mm:url page="${_.URL}" absolute="true" /></oi:medium>
                </c:otherwise>
              </c:choose>
            </mm:node>
          </c:if>
        </mm:listfunction>
      </mm:functioncontainer>
      
      <!-- oi:medium thumbnail -->
      <c:if test="${fn:startsWith(type,'video')}">
        <mm:nodefunction name="thumbnail">
          <oi:medium format="thumbnail"><mm:image template="s(512x288)+size(512x288&gt;)" absolute="true" /></oi:medium>
        </mm:nodefunction>
      </c:if>
      <c:if test="${fn:startsWith(type,'audio')}">
        <mm:relatednodescontainer type="images" role="related" searchdirs="destination">
          <mm:maxnumber value="1" />
          <mm:relatednodes>
            <oi:medium format="thumbnail"><mm:image template="s(512x288)+size(512x288&gt;)" absolute="true" /></oi:medium>
          </mm:relatednodes>
        </mm:relatednodescontainer>
      </c:if>

      <mm:field name="identifier">
        <mm:isnotempty><oi:identifier xml:lang="${_node.language}"><mm:write /></oi:identifier></mm:isnotempty>
      </mm:field>

      <mm:field name="source">
        <mm:isnotempty><oi:source xml:lang="${_node.language}"><mm:write /></oi:source></mm:isnotempty>
      </mm:field>
      <mm:relatednodescontainer type="mediafragments_translations" role="langrel" searchdirs="destination">
        <mm:relatednodes>
          <mm:field name="source">
            <mm:isnotempty><oi:source xml:lang="${_node.language}"><mm:write /></oi:source></mm:isnotempty>
          </mm:field>
        </mm:relatednodes>
      </mm:relatednodescontainer>

      <!-- oi:language -->
      <oi:language>
        <c:set var="count" value="0" />
        <mm:listfunction name="filteredurls">
          <c:if test="${_.main and count lt 1}"><!-- only one possible, but imported streams can have multiple sources -->
            <c:set var="count" value="1" />
            <mm:node number="${_.source.number}">
              <mm:hasfield name="language">
                <mm:field name="language">
                  <mm:isempty>nl</mm:isempty>
                  <mm:isnotempty>${_}</mm:isnotempty>
                </mm:field>
              </mm:hasfield>
              <mm:hasfield name="language" inverse="true">nl</mm:hasfield>
            </mm:node>
          </c:if>
        </mm:listfunction>
      </oi:language>

      <oi:references xml:lang="${_node.language}"><mm:field name="relation" /></oi:references>
      <mm:relatednodescontainer type="mediafragments_translations" role="langrel" searchdirs="destination">
        <mm:relatednodes>
          <mm:field name="relation">
            <mm:isnotempty>
              <oi:references xml:lang="${_node.language}"><mm:write /></oi:references>
            </mm:isnotempty>
          </mm:field>
        </mm:relatednodes>
      </mm:relatednodescontainer>

      <!-- oi:mediator -->
      <oi:mediator xml:lang="${_node.language}"><mm:field name="mediator" /></oi:mediator>
      <mm:relatednodescontainer type="mediafragments_translations" role="langrel" searchdirs="destination">
        <mm:relatednodes>
          <mm:field name="mediator">
            <mm:isnotempty>
              <oi:mediator xml:lang="${_node.language}"><mm:write /></oi:mediator>
            </mm:isnotempty>
          </mm:field>
        </mm:relatednodes>
      </mm:relatednodescontainer>
             
      <!-- oi:spatial -->
      <mm:field name="coverage" escape="none">
        <mm:isnotempty>
          <c:forEach items="${fn:split(_, ';')}" var="coverage">
            <oi:spatial xml:lang="${_node.language}"><c:out value="${fn:trim(coverage)}" /></oi:spatial>
          </c:forEach>
        </mm:isnotempty>
      </mm:field>
      <mm:relatednodescontainer type="mediafragments_translations" role="langrel" searchdirs="destination">
        <mm:relatednodes>
          <mm:field name="coverage" escape="none">
            <mm:isnotempty>
              <c:forEach items="${fn:split(_, ';')}" var="coverage_translated">
                <oi:spatial xml:lang="${_node.language}"><c:out value="${fn:trim(coverage_translated)}" /></oi:spatial>
              </c:forEach>
            </mm:isnotempty>
          </mm:field>
        </mm:relatednodes>
      </mm:relatednodescontainer>

      <!-- oi:license etc. -->
      <mm:url page="/media/${_node.number}" absolute="true" id="page_link" write="false" />
      <mm:relatednodescontainer type="licenses" role="related" searchdirs="destination">
        <mm:relatednodes>
          <oi:attributionName xml:lang="${_node.language}"><mm:write referid="dc_creator" /></oi:attributionName>
          <oi:attributionURL><mm:write referid="page_link" /></oi:attributionURL>
          <oi:license><mm:field name="url" /></oi:license>
        </mm:relatednodes>
      </mm:relatednodescontainer>

      <!-- oi:location -->
      <mm:relatednodescontainer type="locations" role="posrel" searchdirs="destination">
        <mm:relatednodes>
          <oi:location><fmt:formatNumber 
                            value="${_node.latitude}" pattern="+#.####;-#.####" /><fmt:formatNumber 
                            value="${_node.longitude}" pattern="+#.####;-#.####" /><fmt:formatNumber 
                            value="${_node.altitude}" pattern="+#.####;-#.####" /></oi:location>
        </mm:relatednodes>
      </mm:relatednodescontainer>

      <!-- oi:hasformat -->
      <mm:field name="hasformat">
        <mm:isnotempty><oi:hasformat><mm:write /></oi:hasformat></mm:isnotempty>
      </mm:field>

    </oai_oi:oi>
  </metadata>

</record>
